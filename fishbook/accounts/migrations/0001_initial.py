# Generated by Django 4.1.3 on 2022-11-28 15:13

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import fishbook.accounts.managers
import fishbook.accounts.validators
import fishbook.core.model_mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', fishbook.accounts.managers.AppUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', validators=[fishbook.accounts.validators.validate_image])),
                ('username', models.CharField(blank=True, max_length=30, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(2)])),
                ('fishing_style', models.CharField(blank=True, choices=[('float_fishing', 'Float fishing'), ('feeder_fishing', 'Feeder fishing'), ('fly_fishing', 'Fly fishing'), ('carp_fishing', 'Carp fishing'), ('spin_fishing', 'Spin fishing'), ('ice_fishing', 'Ice fishing'), ('trolling_fishing', 'Trolling fishing'), ('salt_water_fishing', 'Salt water fishing'), ('spear_fishing', 'Spear_fishing')], max_length=18, null=True)),
                ('profile_type', models.CharField(blank=True, choices=[('fisherman', 'Fisherman'), ('lake_owner', 'Lake owner')], max_length=10, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('is_completed', models.BooleanField(blank=True, default=False, null=True)),
            ],
            bases=(fishbook.core.model_mixins.StrFromFieldMixin, models.Model),
        ),
    ]
